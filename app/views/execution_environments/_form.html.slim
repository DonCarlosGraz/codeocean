= form_for(@execution_environment) do |f|
  = render('shared/form_errors', object: @execution_environment)
  .form-group
    = f.label(:name)
    = f.text_field(:name, class: 'form-control', required: true)

  = f.label(:programming_languages)
  .form-row
    .prog-lang-form
      .form-group.col-md-6.pl-0.mb-0
        = label(:programming_language, :name)
        = select_tag('name', options_for_select(ProgrammingLanguage.select(:name).distinct.collect{ |pl| [pl.name, pl.id]}), form: 'create-proglang', include_blank: true, class: 'proglang-select')
      .form-group.col-md-4.mb-0
        = label(:programming_language, :version)
        = select_tag('version', nil, include_blank: true, class: 'version-select', disabled: true)
      .form-group.col-md-1.mb-0 title=t('execution_environments.tooltipDefault')
        = label(:programming_language, :default)
        .placeholder.form-control
          .form-check
            = check_box_tag('default', 1, false , title: t('execution_environments.tooltipDefault'), class: 'default-checkbox form-check-input position-static')
      .form-group.col-md-1.mb-0
        = label_tag
        .placeholder.form-control
          = link_to_add_association t('execution_environments.add'), f, :programming_languages_joins, {class: 'btn btn-default btn-xs add-button', disabled: true}
      .help-block == t('.hints.programming_languages')
    .prog-lang-table
      .table-head
        .col-md-4
          = label(:programming_language, :name)
        .col-md-4
          = label(:programming_language, :version)
        .col-md-3
          = label(:programming_language, :default)
        .col-md-1
      .table-body
        = f.fields_for :programming_languages_joins do |programming_language_join|
          = render 'programming_languages_join_fields', f: programming_language_join

  .form-group
    = f.label(:file_type_id)
    = f.collection_select(:file_type_id, FileType.all.order(:name), :id, :name, {include_blank: true}, class: 'form-control')
  .form-group
    = f.label(:docker_image)
    | &nbsp;
    a.toggle-input data={text_initial: t('shared.new'), text_toggled: t('shared.back')} href='#' = t('shared.new')
    .original-input = f.select(:docker_image, @docker_images, {}, class: 'form-control')
    = f.text_field(:docker_image, class: 'alternative-input form-control', disabled: true)
    .help-block == t('.hints.docker_image')
  .form-group
    = f.label(:exposed_ports)
    = f.text_field(:exposed_ports, class: 'form-control', placeholder: '3000, 4000')
    .help-block == t('.hints.exposed_ports')
  .form-group
    = f.label(:memory_limit)
    = f.number_field(:memory_limit, class: 'form-control', min: DockerClient::MINIMUM_MEMORY_LIMIT, value: f.object.memory_limit || DockerClient::DEFAULT_MEMORY_LIMIT)
  .checkbox
    label
      = f.check_box(:network_enabled)
      = t('activerecord.attributes.execution_environment.network_enabled')
  .form-group
    = f.label(:permitted_execution_time)
    = f.number_field(:permitted_execution_time, class: 'form-control', min: 1)
  .form-group
    = f.label(:pool_size)
    = f.number_field(:pool_size, class: 'form-control', min: 0)
  .form-group
    = f.label(:run_command)
    = f.text_field(:run_command, class: 'form-control', placeholder: 'command %{filename}', required: true)
    .help-block == t('.hints.command')
  .form-group
    = f.label(:test_command)
    = f.text_field(:test_command, class: 'form-control', placeholder: 'command %{filename}')
    .help-block == t('.hints.command')
  .form-group
    = f.label(:testing_framework)
    = f.select(:testing_framework, @testing_framework_adapters, {include_blank: true}, class: 'form-control')
  .form-group
    = f.label(:help)
    = f.hidden_field(:help)
    .form-control.markdown
  .actions = render('shared/submit_button', f: f, object: @execution_environment)